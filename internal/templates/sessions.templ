package templates

import (
	"fmt"
	"time"
	"github.com/ngenohkevin/kuiper_admin/internal/models"
)

// This line forces the compiler to use both fmt and time packages
var _ = fmt.Sprintf("time: %v", time.Now())

// SessionList displays a list of all sessions
templ SessionList(sessions []models.Session) {
	@Layout("Sessions") {
		<div class="bg-gray-900 text-white min-h-screen">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<div class="flex justify-between items-center mb-8">
					<div>
						<h1 class="text-3xl font-bold text-indigo-400">Sessions</h1>
						<p class="text-gray-400">Manage user sessions</p>
					</div>
				</div>

				<div class="mb-6">
					<div class="relative rounded-md shadow-sm max-w-lg">
						<input 
							type="text" 
							placeholder="Search sessions..." 
							class="block w-full p-3 bg-gray-800 border border-gray-700 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
							hx-get="/sessions"
							hx-trigger="keyup changed delay:500ms"
							hx-target="#sessions-container"
							hx-select="#sessions-container"
							name="q"
						/>
						<div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
							<svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
							</svg>
						</div>
					</div>
				</div>

				<div id="sessions-container">
					if len(sessions) > 0 {
						<div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden">
							<div class="overflow-x-auto">
								<table class="min-w-full divide-y divide-gray-700">
									<thead class="bg-gray-700">
										<tr>
											<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">ID/Token</th>
											<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Status</th>
											<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Created</th>
											<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider">Expires</th>
											<th scope="col" class="px-6 py-3 text-right text-xs font-medium text-gray-300 uppercase tracking-wider">Actions</th>
										</tr>
									</thead>
									<tbody class="bg-gray-800 divide-y divide-gray-700">
										for _, session := range sessions {
											<tr id={ "session-row-" + session.ID } class="hover:bg-gray-750">
												<td class="px-6 py-4 whitespace-nowrap">
													<div class="text-sm font-medium text-indigo-400">{ session.ID }</div>
													<div class="text-sm text-gray-400 truncate max-w-xs">{ session.Token }</div>
												</td>
												<td class="px-6 py-4 whitespace-nowrap">
													if session.GetStatus() == "Active" {
														<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-900 text-green-200">
															Active
														</span>
													} else {
														<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-900 text-red-200">
															Expired
														</span>
													}
												</td>
												<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
													if session.CreatedAt.Valid {
														{ session.CreatedAt.Time.Format("Jan 2, 2006 15:04") }
													} else {
														<span class="text-gray-500">Unknown</span>
													}
												</td>
												<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-300">
													if session.ExpiresAt.Valid {
														{ session.ExpiresAt.Time.Format("Jan 2, 2006 15:04") }
													} else {
														<span class="text-gray-500">Never</span>
													}
												</td>
												<td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
													<div class="flex justify-end space-x-3">
														<a 
															href={ templ.SafeURL("/sessions/" + session.ID) } 
															class="text-indigo-400 hover:text-indigo-300"
															hx-boost="true"
														>
															View
														</a>
														<a 
															href={ templ.SafeURL("/sessions/" + session.ID + "/edit") } 
															class="text-blue-400 hover:text-blue-300"
															hx-boost="true"
														>
															Edit
														</a>
														<button 
															class="text-red-500 hover:text-red-400"
															hx-delete={ "/sessions/" + session.ID }
															hx-confirm="Are you sure you want to delete this session? This cannot be undone."
															hx-target={ "#session-row-" + session.ID }
															hx-swap="outerHTML swap:1s"
														>
															Delete
														</button>
													</div>
												</td>
											</tr>
										}
									</tbody>
								</table>
							</div>
						</div>
					} else {
						<div class="text-center py-12 bg-gray-800 rounded-lg border border-gray-700">
							<svg class="mx-auto h-12 w-12 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
							</svg>
							<h3 class="mt-2 text-xl font-medium text-gray-200">No sessions found</h3>
							<p class="mt-1 text-gray-400">There are no active sessions in the system.</p>
						</div>
					}
				</div>
			</div>
		</div>
		
		<style>
			.bg-gray-750 {
				background-color: rgb(40, 46, 58);
			}
		</style>
	}
}

// SessionView displays a single session with its details
templ SessionView(session models.Session) {
	@Layout("Session Details") {
		<div class="bg-gray-900 text-white min-h-screen">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<nav class="flex mb-8" aria-label="Breadcrumb">
					<ol class="flex items-center space-x-2">
						<li>
							<a href="/sessions" class="text-gray-400 hover:text-gray-300">Sessions</a>
						</li>
						<li class="flex items-center">
							<svg class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
							</svg>
							<span class="ml-2 text-gray-300 font-medium">Session { session.ID }</span>
						</li>
					</ol>
				</nav>
				
				<div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden">
					<div class="p-6 border-b border-gray-700">
						<div class="flex justify-between items-start">
							<div>
								<h1 class="text-2xl font-bold text-indigo-400">Session Details</h1>
								<div class="flex items-center mt-2">
									if session.GetStatus() == "Active" {
										<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-900 text-green-200">
											Active
										</span>
									} else {
										<span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-900 text-red-200">
											Expired
										</span>
									}
									if session.ExpiresAt.Valid {
										<span class="ml-2 text-sm text-gray-400">
											if session.GetStatus() == "Active" {
												Expires in { formatTimeRemaining(session.ExpiresAt.Time) }
											} else {
												Expired { formatTimeAgo(session.ExpiresAt.Time) } ago
											}
										</span>
									}
								</div>
							</div>
							<div class="flex space-x-3">
								<a 
									href={ templ.SafeURL("/sessions/" + session.ID + "/edit") } 
									class="inline-flex items-center px-3 py-1.5 text-sm font-medium rounded border border-indigo-600 text-indigo-400 hover:bg-indigo-900"
									hx-boost="true"
								>
									<svg class="h-4 w-4 mr-1" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 0L11.828 15H9v-2.828l8.586-8.586z" />
									</svg>
									Edit Session
								</a>
								<a 
									href="/sessions" 
									class="inline-flex items-center px-3 py-1.5 text-sm font-medium rounded border border-gray-600 text-gray-300 hover:bg-gray-700"
									hx-boost="true"
								>
									Back to Sessions
								</a>
							</div>
						</div>
					</div>
					
					<div class="p-6 grid gap-6 md:grid-cols-2">
						<div class="space-y-6">
							<div>
								<h2 class="text-lg font-medium text-gray-300 mb-3">Session Information</h2>
								<div class="bg-gray-700 rounded-lg p-4 space-y-3">
									<div>
										<div class="text-sm text-gray-400">ID</div>
										<div class="text-base text-gray-300 font-mono break-all">{ session.ID }</div>
									</div>
									<div>
										<div class="text-sm text-gray-400">Token</div>
										<div class="text-base text-gray-300 font-mono break-all">{ session.Token }</div>
									</div>
									<div class="grid grid-cols-2 gap-4">
										<div>
											<div class="text-sm text-gray-400">Created</div>
											<div class="text-base text-gray-300">
												if session.CreatedAt.Valid {
													{ session.CreatedAt.Time.Format("Jan 2, 2006 15:04:05") }
												} else {
													<span class="text-gray-500">Unknown</span>
												}
											</div>
										</div>
										<div>
											<div class="text-sm text-gray-400">Last Accessed</div>
											<div class="text-base text-gray-300">
												if session.LastAccessedAt.Valid {
													{ session.LastAccessedAt.Time.Format("Jan 2, 2006 15:04:05") }
												} else {
													<span class="text-gray-500">Unknown</span>
												}
											</div>
										</div>
									</div>
									<div>
										<div class="text-sm text-gray-400">Expires</div>
										<div class="text-base text-gray-300">
											if session.ExpiresAt.Valid {
												{ session.ExpiresAt.Time.Format("Jan 2, 2006 15:04:05") }
											} else {
												<span class="text-gray-500">Never</span>
											}
										</div>
									</div>
								</div>
							</div>
						</div>
						
						<div class="space-y-6">
							<div>
								<h2 class="text-lg font-medium text-gray-300 mb-3">Session Data</h2>
								<div class="bg-gray-700 rounded-lg p-4">
									<pre class="text-sm text-gray-300 font-mono whitespace-pre-wrap">{ session.GetPrettyJSON() }</pre>
								</div>
							</div>
							
							<div class="bg-gray-700 rounded-lg p-4">
								<div class="flex items-center justify-between mb-3">
									<h3 class="text-sm font-medium text-gray-300">Delete Session</h3>
								</div>
								<p class="text-sm text-gray-400 mb-4">This action cannot be undone. This will permanently delete this session.</p>
								<button 
									class="inline-flex items-center px-3 py-2 border border-red-700 text-sm font-medium rounded text-red-400 bg-gray-800 hover:bg-red-900 hover:text-red-200 focus:outline-none"
									hx-delete={ "/sessions/" + session.ID }
									hx-confirm="Are you sure you want to delete this session? This cannot be undone."
								>
									<svg class="h-4 w-4 mr-1.5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
									</svg>
									Delete Session
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	}
}

// SessionForm displays a form for editing a session
templ SessionForm(session models.Session) {
	@Layout("Edit Session") {
		<div class="bg-gray-900 text-white min-h-screen">
			<div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<nav class="flex mb-8" aria-label="Breadcrumb">
					<ol class="flex items-center space-x-2">
						<li>
							<a href="/sessions" class="text-gray-400 hover:text-gray-300">Sessions</a>
						</li>
						<li class="flex items-center">
							<svg class="h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
							</svg>
							<span class="ml-2 text-gray-300 font-medium">Edit Session</span>
						</li>
					</ol>
				</nav>
				
				<div class="bg-gray-800 rounded-lg shadow-xl overflow-hidden">
					<div class="p-6 border-b border-gray-700">
						<h1 class="text-2xl font-bold text-indigo-400">Edit Session</h1>
						<p class="text-gray-400 mt-1">Update session details</p>
					</div>
					
					<div class="p-6">
						<form
							hx-put={ "/sessions/" + session.ID }
							hx-push-url="true"
							hx-target="body"
							hx-swap="outerHTML"
							class="space-y-6"
						>
							<div>
								<h2 class="text-lg font-semibold text-indigo-300 mb-4">Session Information</h2>
								<div class="grid grid-cols-1 gap-6">
									<div>
										<label for="token" class="block text-sm font-medium text-gray-300">
											Token <span class="text-red-500">*</span>
										</label>
										<div class="mt-1">
											<input
												type="text"
												id="token"
												name="token"
												value={ session.Token }
												required
												class="block w-full rounded-md border-0 py-1.5 bg-gray-700 text-white shadow-sm ring-1 ring-inset ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm"
											/>
										</div>
									</div>
									
									<div>
										<label for="data" class="block text-sm font-medium text-gray-300">
											Session Data (JSON)
										</label>
										<div class="mt-1">
											<textarea
												id="data"
												name="data"
												rows="6"
												class="block w-full rounded-md border-0 py-1.5 bg-gray-700 text-white shadow-sm ring-1 ring-inset ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm font-mono"
											>{ session.GetPrettyJSON() }</textarea>
										</div>
										<p class="mt-1 text-xs text-gray-400">JSON format example with user data</p>
									</div>
									
									<div>
										<label for="expires_at" class="block text-sm font-medium text-gray-300">
											Expires At <span class="text-red-500">*</span>
										</label>
										<div class="mt-1">
											<input
												type="datetime-local"
												id="expires_at"
												name="expires_at"
												if session.ExpiresAt.Valid {
													value={ formatDateTimeLocal(session.ExpiresAt.Time) }
												}
												required
												class="block w-full rounded-md border-0 py-1.5 bg-gray-700 text-white shadow-sm ring-1 ring-inset ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm"
											/>
										</div>
									</div>
								</div>
							</div>
							
							<!-- Submit Section -->
							<div class="pt-5 border-t border-gray-700">
								<div class="flex justify-end space-x-3">
									<a
										href={ templ.SafeURL("/sessions/" + session.ID) }
										class="px-4 py-2 bg-gray-700 text-gray-300 rounded hover:bg-gray-600"
									>
										Cancel
									</a>
									<button
										type="submit"
										class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700"
									>
										Update Session
									</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	}
}
