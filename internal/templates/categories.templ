package templates

import (
	"github.com/ngenohkevin/kuiper_admin/internal/models"
)

templ CategoryList(categories []models.Category) {
	@Layout("Categories") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">Categories</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					A list of all categories in your store
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/categories/new"
					hx-boost="true"
					class="block rounded-md bg-purple-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
				>
					Add category
				</a>
			</div>
		</div>

		<!-- Search Form -->
		<div class="mt-6">
			<form action="/categories" method="get" class="max-w-md" hx-get="/categories" hx-trigger="submit" hx-target="#content-area" hx-select="#content-area" hx-push-url="true" onsubmit="event.preventDefault(); this.dispatchEvent(new Event('htmx:trigger'));">
				<div class="relative rounded-md shadow-sm">
					<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
						<svg class="h-5 w-5 text-gray-400 dark:text-gray-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
						</svg>
					</div>
					<input
						type="text"
						name="q"
						id="search"
						class="block w-full rounded-md border-0 py-2 pl-10 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						placeholder="Search categories..."
						hx-get="/categories"
						hx-trigger="keyup changed delay:500ms"
						hx-target="#content-area"
						hx-select="#content-area"
						hx-push-url="true"
					/>
					<div class="absolute inset-y-0 right-0 flex items-center pr-3">
						<button type="submit" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
							Search
						</button>
					</div>
				</div>
			</form>
		</div>

		<div id="content-area" class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 dark:ring-opacity-20 sm:rounded-lg">
						if len(categories) > 0 {
							<table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
								<thead class="bg-gray-50 dark:bg-gray-800">
									<tr>
										<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6">Name</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Slug</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Parent</th>
										<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
											<span class="sr-only">Actions</span>
										</th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-800">
									for _, category := range categories {
										<tr id={ "category-row-" + category.ID } class="hover:bg-gray-50 dark:hover:bg-gray-700">
											<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6">
												{ category.Name }
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
												{ category.Slug }
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
												if category.ParentID != nil {
													<!-- Find parent category name -->
													for _, parent := range categories {
														if parent.ID == *category.ParentID {
															{ parent.Name }
														}
													}
												} else {
													<span class="text-gray-400 dark:text-gray-500">None</span>
												}
											</td>
											<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
												<div class="flex justify-end gap-2">
													<a
														href={ templ.SafeURL("/categories/" + category.ID) }
														hx-boost="true"
														class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
													>
														View
													</a>
													<span class="text-gray-300 dark:text-gray-600">|</span>
													<a
														href={ templ.SafeURL("/categories/" + category.ID + "/edit") }
														hx-boost="true"
														class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
													>
														Edit
													</a>
													<span class="text-gray-300 dark:text-gray-600">|</span>
													<button
														hx-delete={ "/categories/" + category.ID }
														hx-confirm="Are you sure you want to delete this category?"
														hx-target={ "#category-row-" + category.ID }
														hx-swap="outerHTML"
														class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300"
													>
														Delete
													</button>
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						} else {
							<div class="py-12 text-center bg-white dark:bg-gray-800">
								<svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z"></path>
								</svg>
								<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-gray-100">No categories</h3>
								<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new category.</p>
								<div class="mt-6">
									<a
										href="/categories/new"
										hx-boost="true"
										class="inline-flex items-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
									>
										<svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path>
										</svg>
										Add category
									</a>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	}
}

templ CategoryView(category models.Category, categories []models.Category) {
	@Layout("View Category") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<div class="flex items-center">
					<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">{ category.Name }</h1>
					<div class="ml-4">
						<a
							href={ templ.SafeURL("/categories/" + category.ID + "/edit") }
							hx-boost="true"
							class="inline-flex items-center rounded-md bg-white dark:bg-gray-700 px-2.5 py-1.5 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
						>
							Edit
						</a>
					</div>
				</div>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">Category details</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/categories"
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Back to categories
				</a>
			</div>
		</div>

		<div class="mt-6 border-t border-gray-100 dark:border-gray-700">
			<dl class="divide-y divide-gray-100 dark:divide-gray-700">
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Name</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">{ category.Name }</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Slug</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">{ category.Slug }</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Parent Category</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
						if category.ParentID != nil {
							for _, parent := range categories {
								if parent.ID == *category.ParentID {
									{ parent.Name }
								}
							}
						} else {
							<span class="text-gray-400 dark:text-gray-500">None</span>
						}
					</dd>
				</div>
			</dl>
		</div>
	}
}

templ CategoryForm(category *models.Category, categories []models.Category, isEdit bool) {
	@Layout(getTitle(isEdit)) {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">
					if isEdit {
						Edit Category
					} else {
						New Category
					}
				</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					if isEdit {
						Edit your category details
					} else {
						Create a new category
					}
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/categories"
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Cancel
				</a>
			</div>
		</div>

		<form 
			class="mt-8 max-w-md"
			if isEdit {
				hx-put={ "/categories/" + category.ID }
			} else {
				hx-post="/categories"
			}
			hx-target="body"
			hx-swap="outerHTML"
		>
			<div class="space-y-6">
				<div>
					<label for="name" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Name <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<input
							type="text"
							name="name"
							id="name"
							if category != nil {
								value={ category.Name }
							}
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						/>
					</div>
				</div>

				<div>
					<label for="slug" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Slug <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<input
							type="text"
							name="slug"
							id="slug"
							if category != nil {
								value={ category.Slug }
							}
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						/>
					</div>
					<p class="mt-2 text-sm text-gray-500 dark:text-gray-400">
						URL-friendly version of the name. Use lowercase letters, numbers, and hyphens.
					</p>
				</div>

				<div>
					<label for="parent_id" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Parent Category
					</label>
					<div class="mt-2">
						<select
							id="parent_id"
							name="parent_id"
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						>
							<option value="">None</option>
							for _, c := range categories {
								// Skip the current category to prevent self-referencing
								if category == nil || c.ID != category.ID {
									<option 
										value={ c.ID }
										if category != nil && category.ParentID != nil && *category.ParentID == c.ID {
											selected
										}
									>
										{ c.Name }
									</option>
								}
							}
						</select>
					</div>
				</div>

				<div class="flex justify-end">
					<button
						type="submit"
						class="rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
					>
						if isEdit {
							Update Category
						} else {
							Create Category
						}
					</button>
				</div>
			</div>
		</form>
	}
}
