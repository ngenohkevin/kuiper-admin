package templates

import (
	"fmt"
	"strconv"
	"github.com/ngenohkevin/kuiper_admin/internal/models"
)

templ ProductVariantList(variants []models.ProductVariant, products []models.Product) {
	@Layout("Product Variants") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">Product Variants</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					A list of all product variants in your store
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none flex space-x-3">
				<a
					href="/variants/bulk"
					hx-boost="true"
					class="block rounded-md bg-blue-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
				>
					Bulk Add Variants
				</a>
				<a
					href="/variants/new"
					hx-boost="true"
					class="block rounded-md bg-purple-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
				>
					Add variant
				</a>
			</div>
		</div>

		<!-- Search Form -->
		<div class="mt-6">
			<form action="/variants" method="get" class="max-w-md" hx-get="/variants" hx-trigger="submit" hx-target="#content-area" hx-select="#content-area" hx-push-url="true" onsubmit="event.preventDefault(); this.dispatchEvent(new Event('htmx:trigger'));">
				<div class="relative rounded-md shadow-sm">
					<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
						<svg class="h-5 w-5 text-gray-400 dark:text-gray-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
						</svg>
					</div>
					<input
						type="text"
						name="q"
						id="search"
						class="block w-full rounded-md border-0 py-2 pl-10 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						placeholder="Search variants by name, SKU..."
						hx-get="/variants"
						hx-trigger="keyup changed delay:500ms"
						hx-target="#content-area"
						hx-select="#content-area"
						hx-push-url="true"
					/>
					<div class="absolute inset-y-0 right-0 flex items-center pr-3">
						<button type="submit" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
							Search
						</button>
					</div>
				</div>
			</form>
		</div>

		<div id="content-area" class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 dark:ring-white dark:ring-opacity-10 sm:rounded-lg">
						if len(variants) > 0 {
							<table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
								<thead class="bg-gray-50 dark:bg-gray-800">
									<tr>
										<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6">Name</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Product</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Price</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Stock</th>
										<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Status</th>
										<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
											<span class="sr-only">Actions</span>
										</th>
									</tr>
								</thead>
								<tbody class="divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-800">
									for _, variant := range variants {
										<tr id={ "variant-row-" + variant.ID } class="hover:bg-gray-50 dark:hover:bg-gray-700">
											<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6">
												{ variant.Name }
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
												for _, product := range products {
													if product.ID == variant.ProductID {
														{ product.Name }
													}
												}
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
												${ fmt.Sprintf("%.2f", variant.Price) }
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
												{ strconv.Itoa(variant.StockCount) }
											</td>
											<td class="whitespace-nowrap px-3 py-4 text-sm">
												if variant.IsAvailable {
													<span class="inline-flex items-center rounded-full bg-green-100 dark:bg-green-900 px-2.5 py-0.5 text-xs font-medium text-green-800 dark:text-green-300">
														Available
													</span>
												} else {
													<span class="inline-flex items-center rounded-full bg-red-100 dark:bg-red-900 px-2.5 py-0.5 text-xs font-medium text-red-800 dark:text-red-300">
														Unavailable
													</span>
												}
											</td>
											<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
												<div class="flex justify-end gap-2">
													<a
														href={ templ.SafeURL("/variants/" + variant.ID + "/edit") }
														hx-boost="true"
														class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
													>
														Edit
													</a>
													<span class="text-gray-300 dark:text-gray-600">|</span>
													<button
														hx-delete={ "/variants/" + variant.ID }
														hx-confirm="Are you sure you want to delete this variant?"
														hx-target={ "#variant-row-" + variant.ID }
														hx-swap="outerHTML"
														class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300"
													>
														Delete
													</button>
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						} else {
							<div class="py-12 text-center bg-white dark:bg-gray-800">
								<svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"></path>
								</svg>
								<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-gray-100">No variants</h3>
								<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by creating a new product variant.</p>
								<div class="mt-6 flex space-x-3 justify-center">
									<a
										href="/variants/bulk"
										hx-boost="true"
										class="inline-flex items-center rounded-md bg-blue-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-blue-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-600"
									>
										<svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path>
										</svg>
										Bulk Add Variants
									</a>
									<a
										href="/variants/new"
										hx-boost="true"
										class="inline-flex items-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
									>
										<svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path>
										</svg>
										Add variant
									</a>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	}
}

templ StandaloneProductVariantForm(variant *models.ProductVariant, products []models.Product, isEdit bool) {
	@Layout(getVariantTitle(isEdit)) {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">
					if isEdit {
						Edit Product Variant
					} else {
						New Product Variant
					}
				</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					if isEdit {
						Edit your product variant details
					} else {
						Create a new product variant
					}
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/variants"
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Cancel
				</a>
			</div>
		</div>

		<form 
			class="mt-8 max-w-xl"
			if isEdit {
				hx-put={ "/variants/" + variant.ID }
			} else {
				hx-post="/variants"
			}
			hx-target="body"
			hx-swap="outerHTML"
		>
			<div class="space-y-6">
				<div>
					<label for="name" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Name <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<input
							type="text"
							name="name"
							id="name"
							if variant != nil {
								value={ variant.Name }
							}
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
							placeholder="e.g. Small, Red, 16GB"
						/>
					</div>
				</div>

				<div>
					<label for="product_id" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Product <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<select
							id="product_id"
							name="product_id"
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						>
							<option value="">Select a product</option>
							for _, product := range products {
								<option 
									value={ product.ID }
									if variant != nil && variant.ProductID == product.ID {
										selected
									}
								>
									{ product.Name }
								</option>
							}
						</select>
					</div>
				</div>

				<div class="grid grid-cols-2 gap-6">
					<div>
						<label for="price" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
							Price <span class="text-red-500">*</span>
						</label>
						<div class="mt-2">
							<div class="relative rounded-md shadow-sm">
								<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
									<span class="text-gray-500 dark:text-gray-400 sm:text-sm">$</span>
								</div>
								<input
									type="number"
									name="price"
									id="price"
									if variant != nil {
										value={ fmt.Sprintf("%.2f", variant.Price) }
									} else {
										value="0.00"
									}
									step="0.01"
									min="0"
									required
									class="block w-full rounded-md border-0 py-1.5 pl-7 text-gray-900 dark:text-white bg-white dark:bg-gray-700 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
								/>
							</div>
						</div>
					</div>

					<div>
						<label for="stock_count" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
							Stock Count <span class="text-red-500">*</span>
						</label>
						<div class="mt-2">
							<input
								type="number"
								name="stock_count"
								id="stock_count"
								if variant != nil {
									value={ strconv.Itoa(variant.StockCount) }
								} else {
									value="0"
								}
								min="0"
								required
								class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
							/>
						</div>
					</div>
				</div>

				<div class="flex items-center">
					<input
						id="is_available"
						name="is_available"
						type="checkbox"
						if variant == nil || variant.IsAvailable {
							checked
						}
						value="true"
						class="h-4 w-4 rounded border-gray-300 dark:border-gray-700 text-purple-600 focus:ring-purple-600 dark:bg-gray-700"
					/>
					<label for="is_available" class="ml-2 block text-sm text-gray-900 dark:text-gray-100">
						Variant is available for purchase
					</label>
				</div>

				<div class="flex justify-end">
					<button
						type="submit"
						class="rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
					>
						if isEdit {
							Update Variant
						} else {
							Create Variant
						}
					</button>
				</div>
			</div>
		</form>
	}
}

templ ProductVariantForm(product models.Product, variant *models.ProductVariant, isEdit bool) {
	@Layout(getVariantTitle(isEdit)) {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">
					if isEdit {
						Edit Variant for { product.Name }
					} else {
						New Variant for { product.Name }
					}
				</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					if isEdit {
						Edit your product variant details
					} else {
						Create a new product variant
					}
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href={ templ.SafeURL("/products/" + product.ID) }
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Cancel
				</a>
			</div>
		</div>

		<form 
			class="mt-8 max-w-xl"
			if isEdit {
				hx-put={ "/products/" + product.ID + "/variants/" + variant.ID }
			} else {
				method="POST"
				action={ templ.SafeURL("/products/" + product.ID + "/variants") }
			}
			hx-target="body"
			hx-swap="outerHTML"
		>
			<div class="space-y-6">
				<div>
					<label for="name" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Name <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<input
							type="text"
							name="name"
							id="name"
							if variant != nil {
								value={ variant.Name }
							}
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
							placeholder="e.g. Small, Red, 16GB"
						/>
					</div>
				</div>

				<div class="grid grid-cols-2 gap-6">
					<div>
						<label for="price" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
							Price <span class="text-red-500">*</span>
						</label>
						<div class="mt-2">
							<div class="relative rounded-md shadow-sm">
								<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
									<span class="text-gray-500 dark:text-gray-400 sm:text-sm">$</span>
								</div>
								<input
									type="number"
									name="price"
									id="price"
									if variant != nil {
										value={ fmt.Sprintf("%.2f", variant.Price) }
									} else {
										value={ fmt.Sprintf("%.2f", product.Price) }
									}
									step="0.01"
									min="0"
									required
									class="block w-full rounded-md border-0 py-1.5 pl-7 text-gray-900 dark:text-white bg-white dark:bg-gray-700 ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
								/>
							</div>
						</div>
					</div>

					<div>
						<label for="stock_count" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
							Stock Count <span class="text-red-500">*</span>
						</label>
						<div class="mt-2">
							<input
								type="number"
								name="stock_count"
								id="stock_count"
								if variant != nil {
									value={ strconv.Itoa(variant.StockCount) }
								} else {
									value="0"
								}
								min="0"
								required
								class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
							/>
						</div>
					</div>
				</div>

				<div class="flex items-center">
					<input
						id="is_available"
						name="is_available"
						type="checkbox"
						if variant == nil || variant.IsAvailable {
							checked
						}
						value="true"
						class="h-4 w-4 rounded border-gray-300 dark:border-gray-700 text-purple-600 focus:ring-purple-600 dark:bg-gray-700"
					/>
					<label for="is_available" class="ml-2 block text-sm text-gray-900 dark:text-gray-100">
						Variant is available for purchase
					</label>
				</div>

				<div class="flex justify-end">
					<button
						type="submit"
						class="rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
					>
						if isEdit {
							Update Variant
						} else {
							Create Variant
						}
					</button>
				</div>
			</div>
		</form>
	}
}

func getVariantTitle(isEdit bool) string {
	if isEdit {
		return "Edit Product Variant"
	}
	return "New Product Variant"
}
