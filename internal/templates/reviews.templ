package templates

import (
	"strconv"
	"github.com/ngenohkevin/kuiper_admin/internal/models"
)

templ ReviewList(reviews []models.Review) {
	@Layout("Reviews") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">Reviews</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					A list of all product reviews
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/reviews/new"
					hx-boost="true"
					class="block rounded-md bg-purple-600 px-3 py-2 text-center text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
				>
					Add review
				</a>
			</div>
		</div>

		<!-- Search Form -->
		<div class="mt-6">
			<form action="/reviews" method="get" class="max-w-md" hx-get="/reviews" hx-trigger="submit" hx-target="#content-area" hx-select="#content-area" hx-push-url="true" onsubmit="event.preventDefault(); this.dispatchEvent(new Event('htmx:trigger'));">
				<div class="relative rounded-md shadow-sm">
					<div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
						<svg class="h-5 w-5 text-gray-400 dark:text-gray-500" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
							<path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd" />
						</svg>
					</div>
					<input
						type="text"
						name="q"
						id="search"
						class="block w-full rounded-md border-0 py-2 pl-10 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						placeholder="Search reviews by comment or product..."
						hx-get="/reviews"
						hx-trigger="keyup changed delay:500ms"
						hx-target="#content-area"
						hx-select="#content-area"
						hx-push-url="true"
					/>
					<div class="absolute inset-y-0 right-0 flex items-center pr-3">
						<button type="submit" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
							Search
						</button>
					</div>
				</div>
			</form>
		</div>

		<div id="content-area" class="mt-8 flow-root">
			<div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
				<div class="inline-block min-w-full py-2 align-middle sm:px-6 lg:px-8">
					<div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 dark:ring-white dark:ring-opacity-10 sm:rounded-lg">
						if len(reviews) > 0 {
							<table class="min-w-full divide-y divide-gray-300 dark:divide-gray-700">
								<thead class="bg-gray-50 dark:bg-gray-800">
								<tr>
								<th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-6">Product</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Reviewer</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Rating</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Comment</th>
								<th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100">Date</th>
								<th scope="col" class="relative py-3.5 pl-3 pr-4 sm:pr-6">
								 <span class="sr-only">Actions</span>
								 </th>
								 </tr>
							</thead>
								<tbody class="divide-y divide-gray-200 dark:divide-gray-700 bg-white dark:bg-gray-800">
									for _, review := range reviews {
										<tr id={ "review-row-" + review.ID } class="hover:bg-gray-50 dark:hover:bg-gray-700">
										<td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-100 sm:pl-6">
										if review.Product != nil {
										<a 
										href={ templ.SafeURL("/products/" + review.Product.ID) }
										hx-boost="true"
										class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
										>
										{ review.Product.Name }
										</a>
										} else {
										<span class="text-gray-400 dark:text-gray-500">Unknown Product</span>
										}
										</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
										if review.ReviewerName != nil {
										{ *review.ReviewerName }
										} else {
										<span class="text-gray-400 dark:text-gray-500">Anonymous</span>
										}
										</td>
										<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
										  @RatingStars(int(review.Rating))
									</td>
									<td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300 max-w-xs truncate">
										{ review.Comment }
									</td>
								<td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
									{ review.CreatedAt.Time.Format("Jan 2, 2006") }
								</td>
											<td class="relative whitespace-nowrap py-4 pl-3 pr-4 text-right text-sm font-medium sm:pr-6">
												<div class="flex justify-end gap-2">
													<a
														href={ templ.SafeURL("/reviews/" + review.ID) }
														hx-boost="true"
														class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
													>
														View
													</a>
													<span class="text-gray-300 dark:text-gray-600">|</span>
													<a
														href={ templ.SafeURL("/reviews/" + review.ID + "/edit") }
														hx-boost="true"
														class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
													>
														Edit
													</a>
													<span class="text-gray-300 dark:text-gray-600">|</span>
													<button
														hx-delete={ "/reviews/" + review.ID }
														hx-confirm="Are you sure you want to delete this review?"
														hx-target={ "#review-row-" + review.ID }
														hx-swap="outerHTML"
														class="text-red-600 dark:text-red-400 hover:text-red-900 dark:hover:text-red-300"
													>
														Delete
													</button>
												</div>
											</td>
										</tr>
									}
								</tbody>
							</table>
						} else {
							<div class="py-12 text-center bg-white dark:bg-gray-800">
								<svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z" />
								</svg>
								<h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-gray-100">No reviews</h3>
								<p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Get started by adding a new review.</p>
								<div class="mt-6">
									<a
										href="/reviews/new"
										hx-boost="true"
										class="inline-flex items-center rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
									>
										<svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
											<path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"></path>
										</svg>
										Add review
									</a>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	}
}

templ RatingStars(rating int) {
	<div class="flex items-center">
		for i := 1; i <= 5; i++ {
			if i <= rating {
				<svg class="h-5 w-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
					<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.799-2.034c-.784-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
				</svg>
			} else {
				<svg class="h-5 w-5 text-gray-300 dark:text-gray-600" fill="currentColor" viewBox="0 0 20 20">
					<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.799-2.034c-.784-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
				</svg>
			}
		}
		<span class="ml-2 text-sm text-gray-600 dark:text-gray-300">{ strconv.Itoa(rating) } out of 5</span>
	</div>
}

templ ReviewView(review models.Review) {
	@Layout("View Review") {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<div class="flex items-center">
					<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">Review Details</h1>
					<div class="ml-4">
						<a
							href={ templ.SafeURL("/reviews/" + review.ID + "/edit") }
							hx-boost="true"
							class="inline-flex items-center rounded-md bg-white dark:bg-gray-700 px-2.5 py-1.5 text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
						>
							Edit
						</a>
					</div>
				</div>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">Review information</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/reviews"
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Back to reviews
				</a>
			</div>
		</div>

		<div class="mt-6 border-t border-gray-100 dark:border-gray-700">
			<dl class="divide-y divide-gray-100 dark:divide-gray-700">
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Product</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
						if review.Product != nil {
							<a 
								href={ templ.SafeURL("/products/" + review.Product.ID) }
								hx-boost="true"
								class="text-purple-600 dark:text-purple-400 hover:text-purple-900 dark:hover:text-purple-300"
							>
								{ review.Product.Name }
							</a>
						} else {
							<span class="text-gray-400 dark:text-gray-500">Unknown Product</span>
						}
					</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Reviewer</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
						if review.ReviewerName != nil {
							{ *review.ReviewerName }
						} else {
							<span class="text-gray-400 dark:text-gray-500">Anonymous</span>
						}
					</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Rating</dt>
					<dd class="mt-1 sm:col-span-2 sm:mt-0">
						@RatingStars(int(review.Rating))
					</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Comment</dt>
					<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
						if review.Comment != "" {
							{ review.Comment }
						} else {
							<span class="text-gray-400 dark:text-gray-500">No comment</span>
						}
					</dd>
				</div>
				<div class="px-4 py-6 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
					<dt class="text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">Date</dt>
				<dd class="mt-1 text-sm leading-6 text-gray-700 dark:text-gray-300 sm:col-span-2 sm:mt-0">
					{ review.CreatedAt.Time.Format("January 2, 2006 3:04 PM") }
				</dd>
				</div>
			</dl>
		</div>
	}
}

templ ReviewForm(review *models.Review, products []models.Product, isEdit bool) {
	@Layout(getReviewTitle(isEdit)) {
		<div class="sm:flex sm:items-center">
			<div class="sm:flex-auto">
				<h1 class="text-3xl font-semibold leading-tight text-gray-900 dark:text-gray-100">
					if isEdit {
						Edit Review
					} else {
						New Review
					}
				</h1>
				<p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
					if isEdit {
						Edit review details
					} else {
						Create a new review
					}
				</p>
			</div>
			<div class="mt-4 sm:ml-16 sm:mt-0 sm:flex-none">
				<a
					href="/reviews"
					hx-boost="true"
					class="block rounded-md bg-white dark:bg-gray-700 px-3 py-2 text-center text-sm font-semibold text-gray-900 dark:text-gray-100 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 hover:bg-gray-50 dark:hover:bg-gray-600"
				>
					Cancel
				</a>
			</div>
		</div>

		<form 
			class="mt-8 max-w-md"
			if isEdit {
				hx-put={ "/reviews/" + review.ID }
			} else {
				hx-post="/reviews"
			}
			hx-target="body"
			hx-swap="outerHTML"
		>
			<div class="space-y-6">
				<div>
					<label for="product_id" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Product <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<select
							id="product_id"
							name="product_id"
							required
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						>
							<option value="">Select a product</option>
							for _, p := range products {
								<option 
									value={ p.ID }
									if review != nil && review.ProductID != nil && *review.ProductID == p.ID {
										selected
									}
								>
									{ p.Name }
								</option>
							}
						</select>
					</div>
				</div>

				<div>
					<label class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Rating <span class="text-red-500">*</span>
					</label>
					<div class="mt-2">
						<div class="rating-group">
							<div class="flex items-center">
								for i := 1; i <= 5; i++ {
									<div class="star-rating">
										<input 
										type="radio" 
										id={ "rating-" + strconv.Itoa(i) }
										name="rating" 
										value={ strconv.Itoa(i) }
										if review != nil && int(review.Rating) == i {
										checked
										}
										required
										/>
										<label for={ "rating-" + strconv.Itoa(i) } class="star">
											<svg class="w-8 h-8 cursor-pointer" fill="currentColor" viewBox="0 0 20 20">
												<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.799-2.034c-.784-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
											</svg>
										</label>
									</div>
								}
							</div>
						</div>
					</div>
				</div>

				<div>
					<label for="reviewer_name" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Reviewer Name
					</label>
					<div class="mt-2">
						<input
							id="reviewer_name"
							name="reviewer_name"
							type="text"
							if review != nil && review.ReviewerName != nil {
								value={ *review.ReviewerName }
							}
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						/>
					</div>
				</div>

				<div>
					<label for="comment" class="block text-sm font-medium leading-6 text-gray-900 dark:text-gray-100">
						Comment
					</label>
					<div class="mt-2">
						<textarea
							id="comment"
							name="comment"
							rows="4"
							class="block w-full rounded-md border-0 py-1.5 text-gray-900 dark:text-white bg-white dark:bg-gray-700 shadow-sm ring-1 ring-inset ring-gray-300 dark:ring-gray-600 placeholder:text-gray-400 dark:placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-purple-600 dark:focus:ring-purple-500 sm:text-sm sm:leading-6"
						>
							if review != nil {
								{ review.Comment }
							}
						</textarea>
					</div>
				</div>

				<div class="flex justify-end">
					<button
						type="submit"
						class="rounded-md bg-purple-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-purple-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-purple-600"
					>
						if isEdit {
							Update Review
						} else {
							Create Review
						}
					</button>
				</div>
			</div>
		</form>

		<style>
			/* Star Rating CSS */
			.rating-group {
				display: inline-flex;
			}
			
			.star-rating {
				position: relative;
			}
			
			.star-rating input {
				position: absolute;
				opacity: 0;
				width: 0;
				height: 0;
			}
			
			.star-rating .star {
				color: #d1d5db; /* Gray-300 */
				cursor: pointer;
				transition: color 0.2s ease;
			}
			
			.dark .star-rating .star {
				color: #4b5563; /* Gray-600 in dark mode */
			}
			
			.star-rating input:checked ~ .star {
				color: #EAB308; /* Yellow-500 */
			}
			
			.star-rating:hover .star {
				color: #d1d5db; /* Gray-300 */
			}
			
			.dark .star-rating:hover .star {
				color: #4b5563; /* Gray-600 in dark mode */
			}
			
			.star-rating input:checked + .star,
			.star-rating:hover input:hover + .star,
			.star-rating:hover input:hover ~ .star,
			.star-rating:hover input:checked ~ .star,
			.star-rating:hover input:checked + .star ~ .star {
				color: #EAB308; /* Yellow-500 */
			}
		</style>
	}
}
